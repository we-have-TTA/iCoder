version: '3.9'

services:
  reverse-proxy:
    image: traefik:v2.8
    restart: unless-stopped
    container_name: traefik
    networks:
      - webssh
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./traefik.yml:/etc/traefik/traefik.yml:ro
      - ./acme.json:/acme.json:rw
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./tr-config:/etc/traefik/config

  db:
    image: postgres
    container_name: db
    environment:
      - "POSTGRES_USER=postgres"
      - "POSTGRES_PASSWORD=postgres"
    volumes:
      - pg-data:/var/lib/postgresql/data
    networks:
      - webssh

  redis:
    image: redis
    container_name: redis
    volumes:
      - redis-data:/usr/local/etc/redis
    networks:
      - webssh

  app:
    build: .
    environment:
      - DATABASE_URL=postgres://postgres:postgres@db/postgres
      - REDIS_URL=redis://redis:6379
      - SECRET_KEY_BASE=0c5bbac11156530c24e2c40abc914e9493219df6be4a40d23829259ff99b0bf42abcfab65a46ac2c7a2d18371226fe5eeb39e6fafa59f293ba1bc5e6bc34e413
    labels:
      - traefik.enable=true
      - traefik.http.routers.app-http.entrypoints=web
      - traefik.http.routers.app-http.rule=Host(`icoder.tw`)
      - traefik.http.routers.app-https.entrypoints=websecure
      - traefik.http.routers.app-https.rule=Host(`icoder.tw`)
      - traefik.http.routers.app-http.middlewares=https-only@file
      - traefik.http.routers.app-https.tls=true
      - traefik.http.routers.app-https.tls.certresolver=letencrypt
      - traefik.http.routers.app-https.service=app
      - traefik.http.services.app.loadbalancer.server.port=3000
      - traefik.docker.network=webssh
    networks:
      - webssh
    volumes:
      - .:/app
      - /home/docker/id_key:/root/.ssh/
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - db
      - redis

volumes:
  pg-data:
    external: true
  redis-data:
    external: true

networks:
  webssh:
    external: true
